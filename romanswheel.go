package main

import (
	"bufio"
	"fmt"
	"net"
	"strings"
)

func main() {
	c, _ := net.Dial("tcp", "irc.root-me.org:6667")
	text := [7]string{"PASS none\n", "NICK wbfrwkt\n", "USER wbfrwkt ircip1.mibbit.com ircip1.mibbit.com wbfrwkt\n", "privmsg candy !ep3\n"}
	resp := ""
	for _, j := range text {
		fmt.Fprintf(c, j)
		connbuf := bufio.NewReader(c)
		b, _ := connbuf.ReadByte()
		if connbuf.Buffered() > 0 {
			var msgData []byte
			msgData = append(msgData, b)
			for connbuf.Buffered() > 0 {
				b, err := connbuf.ReadByte()
				if err == nil {
					msgData = append(msgData, b)
				}
			}
			resp = string(msgData)
		}
		fmt.Println(resp)
		// newout := string(msgData)
		var hesh string
		if strings.Contains(resp, ":Candy!Candy@root-me.org") {
			s := strings.Split(resp, ":")
			fmt.Println(s)
			hesh = s[2]
			// Output: [a b c]
			fmt.Println(hesh)
			res2 := Rot13(hesh)
			res := "privmsg candy !ep3 -rep " + res2 + "\n"
			fmt.Println(res)
			fmt.Fprintf(c, res)
			resp2 := ""
			connbuf = bufio.NewReader(c)
			b, _ = connbuf.ReadByte()
			if connbuf.Buffered() > 0 {
				var msgData []byte
				msgData = append(msgData, b)
				for connbuf.Buffered() > 0 {
					b, err := connbuf.ReadByte()
					if err == nil {
						msgData = append(msgData, b)
					}
				}
				resp2 = string(msgData)
			}
			fmt.Println(resp2)
		}
	}
}
func Rot13(str string) string {
	slice := []rune(str)
	for i := range slice {
		if slice[i] >= 'a' && slice[i] <= 'm' || slice[i] >= 'A' && slice[i] <= 'M' {
			slice[i] += 13
		} else if slice[i] >= 'N' && slice[i] <= 'Z' || slice[i] >= 'n' && slice[i] <= 'z' {
			slice[i] -= 13
		}
	}
	return string(slice)
}
